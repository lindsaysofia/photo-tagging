{"version":3,"sources":["components/Dropdown.js","components/Popup.js","components/Game.js","components/GameTile.js","components/Home.js","components/Leaderboard.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","index","game","handleDropdownSelection","className","characters","map","character","characterIndex","onClick","name","Popup","handleLeaderboardSubmission","handleNameChange","timeLapsed","onSubmit","to","toFixed","id","type","placeholder","value","onChange","minLength","maxLength","required","Game","games","handleImageClick","charactersFound","currentGameIndex","updateCurrentGameIndex","src","image","alt","includes","GameTile","parent","initiateGame","active","handleLeaderboardStats","Home","updateStats","Leaderboard","stats","sort","firstStat","secondStat","time","gameIndex","header","headerIndex","stat","statIndex","date","toDate","toDateString","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","initialGameInfo","useState","setGames","currentX","currentY","location","setLocation","setCharactersFound","setName","startTime","setStartTime","setTimeLapsed","setCurrentGameIndex","setStats","navigate","useNavigate","badwordsArray","list","array","badwordsFilter","Filter","addWords","app","initializeApp","db","getFirestore","storage","getStorage","a","forEach","docRef","doc","getDoc","then","docSnap","exists","prevGames","prevGamesCopy","slice","data","console","log","getGames","gameImageRef","ref","getDownloadURL","url","catch","error","getGameImage","characterImageRef","getCharacterLocations","useEffect","performance","now","resetGame","newStat","statsRef","updateDoc","arrayUnion","gameTiles","Array","from","document","querySelectorAll","classList","remove","add","newIndex","path","element","e","target","getBoundingClientRect","height","width","top","left","pageX","pageY","imageX","clientX","imageY","clientY","dropdown","querySelector","style","dataset","x","y","delta","deltaXMinus","Math","abs","deltaXPlus","deltaYMinus","deltaYPlus","charactersFoundCopy","push","length","endTime","visibility","gameOver","preventDefault","input","getElementById","isProfane","setCustomValidity","reportValidity","validity","valid","addStat","Timestamp","fromDate","Date","newName","trim","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.f09b4486.chunk.js","sourcesContent":["import '../styles/Dropdown.css';\n\nfunction Dropdown(props) {\n  const { index, game, handleDropdownSelection } = props;\n  return (\n    <div className=\"Dropdown\">\n      {game.characters.map((character, characterIndex) => {\n        return (\n          <p \n            key={characterIndex} \n            data-game={index} \n            data-character={characterIndex}\n            className=\"Dropdown-character\"\n            onClick={handleDropdownSelection}\n            >\n            {character.name}\n          </p>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Dropdown;","import { Link } from \"react-router-dom\";\nimport '../styles/Popup.css'\nfunction Popup(props) {\n  const { handleLeaderboardSubmission, index, handleNameChange, name, timeLapsed } = props;\n  return (\n    <div className=\"Popup\">\n      <form className=\"Popup-form\" onSubmit={handleLeaderboardSubmission}>\n        <Link \n          className=\"form-close\"\n          to=\"/\"\n        >\n          X\n        </Link>\n        <h2>You finished in {timeLapsed.toFixed(4)} seconds!</h2>\n        <p>Submit your score on the global leaderboard!</p>\n        <input \n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleNameChange}\n          minLength=\"1\"\n          maxLength=\"20\"\n          required\n          className=\"form-input\"\n        />\n        <div className=\"form-buttons\">\n          <button \n            type=\"submit\"\n            className=\"form-submit\"\n            data-index={index}\n            onClick={handleLeaderboardSubmission}\n          >\n            Submit Name\n          </button>\n          <Link \n            to=\"/\"\n            className=\"form-nosubmit\"\n          >\n            No, thanks\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Popup;","import { Link } from \"react-router-dom\";\nimport '../styles/Game.css'\nimport Dropdown from \"./Dropdown\";\nimport Popup from \"./Popup\";\n\nfunction Game(props) {\n  const { games, handleImageClick, handleDropdownSelection, charactersFound, handleLeaderboardSubmission, handleNameChange, name, timeLapsed, updateCurrentGameIndex, currentGameIndex } = props;\n\n  return (\n    <div className=\"Game\">\n      <Popup handleLeaderboardSubmission={handleLeaderboardSubmission} index={currentGameIndex} handleNameChange={handleNameChange} name={name} timeLapsed={timeLapsed} />\n      <nav className=\"Game-nav\">\n        <div className=\"Game-characters\">\n          {games[currentGameIndex].characters.map((character, index) => {\n              return (\n                <div key={index}>\n                  <img \n                    src={character.image}\n                    alt={character.name}\n                    className={`Game-character${charactersFound.includes(character.name) ? ' found' : ''}`}\n                  />\n                  <p className=\"Game-character-name\">{character.name}</p>\n                </div>\n              );\n            })}\n        </div>\n        <Link to=\"/\" className=\"Game-nav-link\">\n          <h1><i className=\"fas fa-search\"></i> iSpy</h1>\n          <p>Find the hidden characters!</p>\n        </Link>\n        <Link to=\"/leaderboard\" className=\"Game-nav-link\">Leaderboard</Link>\n      </nav>\n      <main className=\"Game-main\">\n        <img\n          src={games[currentGameIndex].image}\n          alt=\"\"\n          className=\"Game-image\"\n          onClick={handleImageClick}\n        />\n        <Dropdown index={currentGameIndex} game={games[currentGameIndex]} handleDropdownSelection={handleDropdownSelection}/>\n      </main>\n    </div>\n  );\n}\n\nexport default Game;","import { Link } from \"react-router-dom\";\nimport '../styles/GameTile.css';\n\nfunction GameTile(props) {\n  const { game, index, parent, initiateGame, updateCurrentGameIndex } = props;\n  if (parent === 'home') {\n    return (\n      <Link to=\"/game\" className=\"GameTile\" onClick={() => {\n        initiateGame();\n        updateCurrentGameIndex(index);\n      }}>\n        <img \n          src={game.image} \n          alt=\"\"\n          className=\"GameTile-image\"\n        />\n        <div className=\"GameTile-description\">\n          <h3>Game {index + 1}</h3>\n          <div className=\"GameTile-characters\">\n            {game.characters.map((character, index) => {\n              return (\n                <img \n                  key={index}\n                  src={character.image}\n                  alt={character.name}\n                  className=\"GameTile-character\"\n                />\n              );\n            })}\n          </div>\n        </div>\n      </Link>\n    );\n  }\n  const { active, handleLeaderboardStats } = props;\n  return (\n    <div onClick={() => {\n      handleLeaderboardStats(index);\n      updateCurrentGameIndex(index);\n    }} className={`GameTile leaderboard${active? ' active' : ''}`}>\n      <img \n        src={game.image} \n        alt=\"\"\n        className=\"GameTile-image\"\n        onClick={() => {\n          handleLeaderboardStats(index);\n          updateCurrentGameIndex(index);\n        }}\n      />\n      <div onClick={() => {\n      handleLeaderboardStats(index);\n      updateCurrentGameIndex(index);\n    }} className=\"GameTile-description\">\n        <h3 onClick={() => {\n      handleLeaderboardStats(index);\n      updateCurrentGameIndex(index);\n    }}>Game {index + 1}</h3>\n        <div onClick={() => {\n      handleLeaderboardStats(index);\n      updateCurrentGameIndex(index);\n    }} className=\"GameTile-characters\">\n          {game.characters.map((character, characterIndex) => {\n            return (\n              <img \n                key={characterIndex}\n                src={character.image}\n                alt={character.name}\n                className=\"GameTile-character\"\n                onClick={() => {\n                  handleLeaderboardStats(index);\n                  updateCurrentGameIndex(index);\n                }}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GameTile;","import { Link } from \"react-router-dom\";\nimport '../styles/Home.css';\nimport GameTile from \"./GameTile\";\n\nfunction Home(props) {\n  const { games, initiateGame, updateCurrentGameIndex, updateStats } = props;\n  return (\n    <div className=\"Home\">\n      <nav className=\"Home-nav\">\n        <Link to=\"/\" className=\"Home-nav-link\">\n          <h1><i className=\"fas fa-search\"></i> iSpy</h1>\n          <p>Find the hidden characters!</p>\n        </Link>\n        <Link to=\"/leaderboard\" className=\"Home-nav-link\" onClick={updateStats}>Leaderboard</Link>\n      </nav>\n      <main className=\"Home-main\">\n        {games.map((game, index) => {\n          return (\n            <GameTile parent=\"home\" key={index} game={game} index={index} initiateGame={initiateGame} updateCurrentGameIndex={updateCurrentGameIndex} />\n          );\n        })}\n      </main>\n    </div>\n  );\n}\n\nexport default Home;","import { Link } from \"react-router-dom\";\nimport GameTile from \"./GameTile\";\nimport '../styles/Leaderboard.css';\n\nfunction Leaderboard(props) {\n  const statsHeader = ['Place', 'Player', 'Time (Seconds)', 'Date'];\n  const { games, handleLeaderboardStats, currentGameIndex, updateCurrentGameIndex, stats, initiateGame } = props;\n  stats.sort((firstStat, secondStat) => {\n    return firstStat.time - secondStat.time;\n  });\n  return (\n    <div className=\"Leaderboard\">\n      <nav className=\"Leaderboard-nav\">\n        <Link to=\"/\" className=\"Leaderboard-nav-link\">\n          <h1><i className=\"fas fa-search\"></i> iSpy</h1>\n          <p>Find the hidden characters!</p>\n        </Link>\n      </nav>\n      <main className=\"Leaderboard-main\">\n        <div className=\"Leaderboard-games\">\n          {games.map((game, gameIndex) => {\n            return (\n              <GameTile parent=\"leaderboard\" key={gameIndex} game={game} index={gameIndex} active={gameIndex === currentGameIndex} handleLeaderboardStats={handleLeaderboardStats} updateCurrentGameIndex={updateCurrentGameIndex}/>\n            );\n          })}\n        </div>\n        <Link to=\"/game\" className=\"Leaderboard-play\" onClick={() => {\n          initiateGame();\n        }}>Play this Level</Link>\n        <div className=\"Leaderboard-stats\">\n          {statsHeader.map((header, headerIndex) => {\n            return <h3 key={headerIndex} className=\"stats-header\">{header}</h3>\n          })}\n          {stats.map((stat, statIndex) => {\n            return [<p key={`${statIndex}1`} className=\"stat\">{statIndex + 1}</p>, <p key={`${statIndex}2`} className=\"stat\">{stat.name}</p>, <p key={`${statIndex}3`} className=\"stat\">{stat.time.toFixed(4)}</p>, <p key={`${statIndex}4`} className=\"stat\">{stat.date.toDate().toDateString()}</p>]\n          })}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Leaderboard;","const firebaseConfig = {\n  apiKey: \"AIzaSyBT6uBDAfiNc-M5n7h4DPQsVZjwVaBp1JE\",\n  authDomain: \"phototagging-c7dad.firebaseapp.com\",\n  projectId: \"phototagging-c7dad\",\n  storageBucket: \"phototagging-c7dad.appspot.com\",\n  messagingSenderId: \"155339646587\",\n  appId: \"1:155339646587:web:e75da3efbf32b177bbe4de\"\n};\n\nexport default firebaseConfig;","import { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Filter from \"bad-words\";\nimport list from \"badwords-list\";\nimport Game from \"./components/Game\";\nimport Home from \"./components/Home\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport './App.css';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport { doc, getDoc, getFirestore, updateDoc, arrayUnion, Timestamp} from \"firebase/firestore\";\nimport firebaseConfig from './config';\nimport { useEffect, useState } from \"react\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n\n// Initialize Firebase\n\nfunction App() {\n  const  initialGameInfo = [\n    {\n      image: '',\n      characters: [\n        {\n          name: 'sasuke',\n          image: '',\n        },\n        {\n          name: 'waldo',\n          image: '',\n        },\n      ]\n    },\n    {\n      image: '',\n      characters: [\n        {\n          name: 'naruto',\n          image: '',\n        },\n        {\n          name: 'woody',\n          image: '',\n        },\n        {\n          name: 'ash',\n          image: '',\n        },\n      ]\n    },\n    {\n      image: '',\n      characters: [\n        {\n          name: 'pikachu',\n          image: '',\n        },\n      ]\n    },\n    {\n      image: '',\n      characters: [\n        {\n          name: 'waldo',\n          image: '',\n        },\n      ]\n    },\n    {\n      image: '',\n      characters: [\n        {\n          name: 'swordfish',\n          image: '',\n        },\n        {\n          name: 'pretzel',\n          image: '',\n        },\n        {\n          name: 'heart',\n          image: '',\n        },\n      ]\n    },\n    {\n      image: '',\n      characters: [\n        {\n          name: 'sonic',\n          image: '',\n        },\n      ]\n    },\n  ]\n  const [games, setGames] = useState(initialGameInfo);\n  const [location, setLocation] = useState({currentX: 0, currentY: 0});\n  const [charactersFound, setCharactersFound] = useState([]);\n  const [name, setName] = useState('');\n  const [startTime, setStartTime] = useState(0);\n  const [timeLapsed, setTimeLapsed] = useState(0);\n  const [currentGameIndex, setCurrentGameIndex] = useState(0);\n  const [stats, setStats] = useState([]);\n  const navigate = useNavigate();\n  const badwordsArray = list.array;\n  const badwordsFilter = new Filter();\n  badwordsFilter.addWords(...badwordsArray);\n\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n\n  const storage = getStorage(app);\n\n  const getGameImage = (gameIndex) => {\n    const gameImageRef = ref(storage, `game${gameIndex + 1}.${gameIndex === 2 ? 'png': 'jpeg'}`);\n    getDownloadURL(gameImageRef)\n    .then((url) => {\n      setGames((prevGames) => {\n        const prevGamesCopy = prevGames.slice();\n        prevGamesCopy[gameIndex].image = url;\n        return prevGamesCopy;\n      }); \n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  const getCharacterImages = (gameIndex) => {\n    games[gameIndex].characters.forEach((character, index) => {\n      const characterImageRef = ref(storage, `characters/${character.name}.png`);\n      getDownloadURL(characterImageRef)\n      .then((url) => {\n        setGames((prevGames) => {\n          const prevGamesCopy = prevGames.slice();\n          prevGamesCopy[gameIndex].characters[index].image = url;\n          return prevGamesCopy;\n        }); \n      })\n      .catch((error) => {\n        console.log(error);\n      })\n    }); \n  }\n\n  async function getCharacterLocations(gameIndex) {\n    games[gameIndex].characters.forEach((character, index) => {\n      const docRef = doc(db, `game${gameIndex + 1}`, character.name);\n      getDoc(docRef).then((docSnap) => {\n        if (docSnap.exists()) {\n          setGames((prevGames) => {\n            const prevGamesCopy = prevGames.slice();\n            prevGamesCopy[gameIndex].characters[index].location = docSnap.data();\n            return prevGamesCopy;\n          }); \n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      });\n    });\n  }\n\n  const getGames = () => {\n    games.forEach((game, index) => {\n      getGameImage(index);\n      getCharacterImages(index);\n      getCharacterLocations(index);\n    });\n  };\n\n  useEffect(() => {\n    getGames();\n    return () => {\n      setGames(initialGameInfo);\n    };\n  }, []);\n\n  const handleImageClick = (e) => {\n    const {\n      height,\n      width,\n      top,\n      left,\n    } = e.target.getBoundingClientRect();\n    const {\n      pageX,\n      pageY,\n      clientX,\n      clientY,\n    } = e;\n    const imageX = clientX - left;\n    const imageY = clientY - top;\n    const dropdown = document.querySelector('.Dropdown');\n    dropdown.style.left = `${pageX}px`;\n    dropdown.style.top = `${pageY}px`;\n    const percentageX = (imageX/width) * 100;\n    const percentageY = (imageY/height) * 100;\n    setLocation({currentX: percentageX, currentY: percentageY});\n    \n  };\n\n  const initiateGame = () => {\n    setStartTime(performance.now());\n    resetGame();\n  };\n\n  const resetGame = () => {\n    setCharactersFound([]);\n    setName('');\n  };\n\n  const gameOver = () => {\n    const endTime = performance.now();\n    const popup = document.querySelector('.Popup');\n    popup.style.visibility = 'visible';\n    resetGame();\n   setTimeLapsed((endTime - startTime)/1000);\n  };\n\n  async function addStat(newStat) {\n    try {\n      const statsRef = doc(db, `game${currentGameIndex + 1}`, \"stats\");\n      await updateDoc(statsRef, {\n        stats: arrayUnion(newStat)\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  const handleLeaderboardSubmission = (e) => {\n    e.preventDefault();\n    const input = document.getElementById('name');\n    if (badwordsFilter.isProfane(name)) {\n      input.setCustomValidity('Oh no! Your name contains profanity. Please remove before proceeding.');\n    } else {\n      input.setCustomValidity('');\n    }\n    input.reportValidity();\n    const validityState = input.validity;\n    if (validityState.valid) {\n      const newStat = {\n        name,\n        time: timeLapsed,\n        date: Timestamp.fromDate(new Date()),\n      };\n      addStat(newStat);\n      navigate('/leaderboard');\n      updateStats(currentGameIndex);\n    }\n  }\n\n  const handleNameChange = (e) => {\n    let newName = e.target.value.trim();\n    setName(newName);\n  }\n\n  async function updateStats(index) {\n    index = index || 0;\n    try {\n      const docRef = doc(db, `game${index + 1}`, \"stats\");\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        setStats(docSnap.data().stats)\n      }\n      \n    } catch(e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  async function handleLeaderboardStats(index) {\n    const gameTiles = Array.from(document.querySelectorAll('.GameTile.leaderboard'));\n    gameTiles[currentGameIndex].classList.remove('active');\n    gameTiles[index].classList.add('active');\n    updateStats(index);\n  }\n\n  const handleDropdownSelection = (e) => {\n    const dropdown = document.querySelector('.Dropdown');\n    dropdown.style.left = '-1000px';\n    dropdown.style.top = '-1000px';\n    const { game: gameIndex, character: characterIndex} = e.target.dataset;\n    const { name } = games[gameIndex].characters[characterIndex];\n    if (charactersFound.includes(name)) {\n      return;\n    }\n    const { x, y, delta } = games[gameIndex].characters[characterIndex].location;\n    const {currentX, currentY } = location;\n    const deltaXMinus = Math.abs(currentX - delta);\n    const deltaXPlus = Math.abs(currentX + delta);\n    const deltaYMinus = Math.abs(currentY - delta);\n    const deltaYPlus = Math.abs(currentY + delta);\n    const isFound = deltaYMinus <= y && deltaYPlus >= y && deltaXPlus >= x && deltaXMinus <= x;\n    if (isFound) {\n      let charactersFoundCopy = charactersFound.slice();\n      charactersFoundCopy.push(name);\n      if (charactersFoundCopy.length === games[gameIndex].characters.length) {\n        gameOver();\n      } else {\n        setCharactersFound(charactersFoundCopy);\n      }\n    }\n  };\n\n  const updateCurrentGameIndex = (newIndex) => {\n    setCurrentGameIndex(newIndex);\n  };\n  \n  return (\n    <Routes>\n        <Route path=\"/game\" element={<Game games={games} handleImageClick={handleImageClick} handleDropdownSelection={handleDropdownSelection} charactersFound={charactersFound} handleLeaderboardSubmission={handleLeaderboardSubmission} handleNameChange={handleNameChange} name={name} timeLapsed={timeLapsed} updateCurrentGameIndex={updateCurrentGameIndex} currentGameIndex={currentGameIndex}/>} />\n        <Route path=\"/\" element={<Home games={games} initiateGame={initiateGame} updateCurrentGameIndex={updateCurrentGameIndex} updateStats={updateStats}/>} />\n        <Route path=\"/leaderboard\" element={<Leaderboard games={games} handleLeaderboardStats={handleLeaderboardStats} currentGameIndex={currentGameIndex} updateCurrentGameIndex={updateCurrentGameIndex} stats={stats} initiateGame={initiateGame} />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}